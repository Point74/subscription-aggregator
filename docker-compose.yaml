services:
  postgres:
    image: postgres:17
    hostname: postgres
    container_name: postgres
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  migrate:
    hostname: migrate
    container_name: migrate
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    entrypoint: ["/bin/sh", "-c"]
    command: >
      "while ! pg_isready -h postgres -p 5432 -U ${POSTGRES_USER} -d ${POSTGRES_DB}; do
        echo 'Waiting for database...';
        sleep 1;
      done;
      echo 'Database is ready, applying migrations...';
      migrate -path /app/internal/db/migrations -database 'postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable' -verbose up"
  

  subscription-aggregator:
    image: subscription-aggregator
    env_file: .env
    container_name: subscription-aggregator
    hostname: subscription-aggregator
    build:
      context: .
      dockerfile: Dockerfile
    pull_policy: build
    environment:
      POSTGRES_HOST: postgres
    ports:
      - "${APP_PORT}:8080"
    restart: unless-stopped
    depends_on:
      - migrate


volumes:
  postgres:
